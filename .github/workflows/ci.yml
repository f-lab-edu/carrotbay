name: CI Pipeline
on:
  push:
    branches: [ "main", "feature/ci", "feature/cd" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build project (compile only)
        run: ./gradlew build -x test

      - name: Upload JAR as artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: build/libs/*.jar

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run tests
        run: ./gradlew test

  docker:
    name: Push Docker Image
    runs-on: ubuntu-latest
    needs: test

    outputs:
      image_tag: ${{ steps.set-tag.outputs.image_tag }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Download built JAR
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: build/libs/

      - name: Set Docker image tag
        id: set-tag
        run: |
          IMAGE_TAG=$(date +'%Y%m%d-%H%M%S')
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/carrotbay:${{ env.IMAGE_TAG }} .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/carrotbay:${{ env.IMAGE_TAG }}

      - name: Write image tag to file
        run: echo "${{ env.IMAGE_TAG }}" > tag.txt

      - name: Upload image tag artifact
        uses: actions/upload-artifact@v4
        with:
          name: image-tag
          path: tag.txt

